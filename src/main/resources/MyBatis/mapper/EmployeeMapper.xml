<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!--namespace 名称空间 指定为接口的全类名
    id 唯一标识
    resultType 查出记录怎么办，封闭成什么对象
     #{id} 从传过来的参数中取出 id-->

<!--
use mybatis_1230;
show tables;
drop table t_employee;
create table t_employee (
    id  int(11) primary key auto_increment ,
    last_name varchar(255),
    gender char(1),
    email varchar(255)
);

select *
from t_employee;

-->
<mapper namespace="com.dongfang.mybatis.dao.EmployeeMapper">

    <!--employee 默认的别名-
        emp指定的别名-->

    <!--select id="getEmpById" parameterType="java.lang.Integer" resultType="employee"-->
    <select id="getEmpById" parameterType="java.lang.Integer" resultType="com.dongfang.mybatis.bean.Employee" databaseId="mysql">
        select id, last_name lastName, gender, email from t_employee where id = #{id}
    </select>

    <select id="getEmpById" parameterType="java.lang.Integer" resultType="com.dongfang.mybatis.bean.Employee" databaseId="oracle">
        select id, last_name lastName, gender, email from t_employee where id = #{id}
    </select>


    <insert id="addEmp" parameterType="com.dongfang.mybatis.bean.Employee">
        insert into t_employee (last_name, email, gender)
        values (#{lastName}, #{email}, #{gender})
    </insert>

    <update id="updateEmp">
        update t_employee
        set last_name = #{lastName},
            email     = #{email},
            gender    = #{gender}
        where id = #{id}
    </update>

    <delete id="deleteEmpById">
        delete
        from t_employee
        where id = #{id}
    </delete>
</mapper>
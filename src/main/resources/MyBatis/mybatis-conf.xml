<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration
        PUBLIC "-//mybatis.org//DTD Config 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-config.dtd">
<!--dtd 规定xml中的语法规则-->
<configuration>
    <!--
        1、mybatis可以使用properties来引入外部properties配置文件的内容
            resource: 引入类路径下的资源
            url: 引入网络路径或者磁盘路径下的资源

    -->
    <properties resource="dbconfig.properties"></properties>
    
    <!--
        2、settings包含很多重要的设置项
            setting：用来设置每一个设置项
            name: 设置荐的名字
            value:设置项的取值
            将数据库中的字段按驼峰转为java bean的字段名
    -->
    <settings>
        <setting name="mapUnderscoreToCamelCase" value="true"/>
        <setting name="jdbcTypeForNull" value="OTHER"/>
        <!--显示的指定我们需要更改的配置的值，即使它是默认的，防止版本更新带来的问题-->
        <setting name="lazyLoadingEnabled" value="true"/>
        <setting name="aggressiveLazyLoading" value="false"/>
    </settings>

    <!--
        3、typeAliases:别名处理器，可以为我们的java类型起别名
            别名不区分大小写
    -->
    <typeAliases>
        <!--typeAlias：为某个java类型起别名
            type:指定要起别名的类型的全类名
            什么都不写，默认就是类名小写employee
            alias：指定新的别名-->
        <!--<typeAlias type="Employee" alias="emp"/>-->

        <!--
                package:为某个包下的所有类型批量起别名
                    name:指定名包（为当前世下以及下面所有的后代包的每一个类都起别名）
        -->
        <package name="com.dongfang.mybatis.ch0.bean"/>
        <!--
            包扫描的情况下，使用@Alias注解起别名
        -->
    </typeAliases>

    <!--
        4、environments：环境们，mybatis可以配置多种环境，default指定使用某种环境，可以达到快速切换
            environment：配置一个具体的环境信息，必须有两个标签，id代表当前环境的唯一标识
                transactionManager：事务管理器
                    type:配置事务管理器的类型
                            jdbc        JdbcTransactionFactory
                            managed     ManagedTransactionFactory
                            自定义事务管理器，实现TransactionFactory接口就行，type指定为全类名
                dataSource：数据源
                            type：数据源类型 unpooled(每次访问都建立一次新的连接) pooled jndi
                                自定义数据源：实现DataSourceFactory接口，type是全类名

    -->
    <environments default="development">
        <environment id="test">
            <transactionManager type="JDBC"></transactionManager>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
        
        <environment id="development">
            <transactionManager type="JDBC"/>
            <dataSource type="POOLED">
                <property name="driver" value="${jdbc.driver}"/>
                <property name="url" value="${jdbc.url}"/>
                <property name="username" value="${jdbc.username}"/>
                <property name="password" value="${jdbc.password}"/>
            </dataSource>
        </environment>
    </environments>
    
    <!--
        5、databaseIdProvider：支持多数据库厂商的
            type="DB_VENDOR"：VendorDatabaseIdProvider
                作用就是得到数据库厂商的标识(驱动getDatabaseProductName())，
                mybatis就能根据数据库厂商来执行不同的sql
                MySQL Oracle SQL Server
    -->
    <databaseIdProvider type="DB_VENDOR">
        <property name="MySQL" value="mysql"/>
        <property name="Oracle" value="oracle"/>
        <property name="SQL Server" value="sqlserver"/>
    </databaseIdProvider>

    <!--
        6、将sql映射注册到全局配置中
    -->
    <!--将我们写好的sql映射文件一定要注册到全局配置文件中-->
    <mappers>
        <!--
            mapper:注册一个sql映射
                resource:引用类路径下的sql映射文件
                url: 引用网络路径或磁盘路径下的sql映射文件
                class:引用（注册）接口
                    1、有sql映射文件，映射文件名必须和接口同名，并且与接口放在同一目录下
                    2、没有sql映射文件，所有的sql都是利用注解写在接口上
                        推荐：比较重要的Dao接口写sql映射文件
                        不重要的，简单的Dao接口，为了快速开发可以使用注解
        -->
        <mapper resource="Mybatis/mapper/EmployeeMapper.xml"/>
        <mapper resource="Mybatis/mapper/EmployeeCrudMapper.xml"/>
        <mapper resource="Mybatis/mapper/SelectParamMapper.xml"/>
        <mapper resource="Mybatis/mapper/SelectEmployeeMapper.xml"/>
        <mapper resource="Mybatis/mapper/ResultAutoMapper.xml"/>
        <mapper resource="Mybatis/mapper/DepartmentMapper.xml"/>
        <mapper resource="Mybatis/mapper/DynamicSqlMapper.xml"/>
        <mapper class="com.dongfang.mybatis.dao.EmployeeMapperAnnotation"/>

        <!--package 批量注册 name 包名-->
        <!--<package name=""/>-->
    </mappers>
</configuration>